---
- name: "Packages Baseline / Process ..."
  include_role:
    name: wyga/import/common

- name: "Packages Baseline / Select baseline ..."
  set_fact:
    baseline_list: "{{ [ '.' ~ host.package.baseline ] }}"
  when: host.package.baseline is string

- name: "Packages Baseline / Select baseline ..."
  set_fact:
    baseline_list: "{{ host.package.baseline }}"
  when: host.package.baseline is not string

- name: "Packages Baseline / Save baseline ..."
  set_fact:
    baseline_config: "{{ baseline_list }}"

- name: "Packages Baseline / Packages ..."
  set_fact:
    baseline_packages: []
    baseline_pin: []
    baseline_include: []

- name: "Packages Baseline / Enumerate ..."
  set_fact:
    baseline_list: "{{ baseline_list | unique | parsepackage }}"

- name: "Packages Baseline / Prepare include list ..."
  set_fact:
    baseline_include: "{{ baseline_list | selectattr('include', 'eq', True ) }}"
    baseline_list: "{{ baseline_list | selectattr('include', 'eq', False ) }}"

- name: "Packages Baseline / Include  ..."
  include_tasks: baseline-include.yaml
  loop: "{{ baseline_include }}"
  loop_control:
    loop_var: process_include
    label: "{{ process_include.name }}"
  when: baseline_include | length > 0

- name: "Packages Baseline / Select only {{ target_distribution }} distribution  ..."
  set_fact:
    baseline_list: "{{ baseline_list | selectattr('distribution', 'in', [ target_distribution, 'target' ]) }}"

- name: "Packages Baseline / Select only {{ target_distribution }} / {{ target_distribution_version }}  ..."
  set_fact:
    baseline_list: "{{ baseline_list | selectattr('version', 'in', [ target_distribution_version, 'target' ]) }}"

- name: "Packages Baseline / Select only {{ target_arch }} architecture  ..."
  set_fact:
    baseline_list: "{{ baseline_list | selectattr('arch', 'in', [ target_arch, 'target' ]) }}"

- name: "Packages Baseline / Gather installed package facts ..."
  ansible.builtin.package_facts:
    manager: auto

- name: "Packages Baseline / Installed packages ..."
  set_fact:
    baseline_installed_packages: "{{ ansible_facts.packages.keys() }}"

- name: "Packages Baseline / Prepare packages list  ..."
  set_fact:
    baseline_packages: "{{ baseline_list | map(attribute='name') | unique }}"
    baseline_packages_rx: "^({{ baseline_list | map(attribute='name') | unique | map('regex_escape') | map('replace', '\\*', '.+') | join('|') }})$"
    baseline_pin: "{{ baseline_pin | unique | intersect(baseline_installed_packages) }}"

- name: "Packages Baseline / Purge list ..."
  set_fact:
      baseline_purge_packages: "{{ baseline_installed_packages | reject('match', baseline_packages_rx) }}"

- name: "Packages Baseline / Safeguard ..."
  fail: msg="Baseline packages list is too short ({{ baseline_packages | length }} entires) ..."
  when: baseline_packages | length < 100

- name: "Packages Baseline / Information ..."
  debug:
    msg:
      - "TARGET:         {{ target_distribution | capitalize }} {{ target_distribution_version }} / {{ target_arch }}"
      - "BASELINE:       {{ baseline_config }}"
      - "BASELINE TOTAL: {{ baseline_packages | length }}"
      - "PIN:            {{ baseline_pin }}"
      - "PURGE:          {{ baseline_purge_packages }}"

# Mark packages as manualy installed ...
- name: "Packages Baseline / Pin packages ..."
  apt:
    name: "{{ baseline_pin }}"
    state: present
    update_cache: false
  register: _action
  retries: 25
  until: _action is success or ('Failed to lock apt for exclusive operation' not in _action.msg and '/var/lib/dpkg/lock' not in _action.msg)
  when: baseline_pin | length > 0

- name: "Packages Baseline / Abort? ..."
  block:
    - name: "Packages Baseline / Info ..."
      debug:
        msg:
          - "Please run me with -econfirm=baseline"
    - fail:
  when: "confirm is not defined or 'baseline' not in confirm"

- name: "Packages Baseline / Purge started ..."
  debug: msg='.'

- name: "Packages Baseline / Purge packages ..."
  apt:
    name: "{{ baseline_purge_packages }}"
    state: absent
    autoremove: true
    purge: true
    update_cache: false
  register: _action
  retries: 25
  until: _action is success or ('Failed to lock apt for exclusive operation' not in _action.msg and '/var/lib/dpkg/lock' not in _action.msg)
  when: baseline_purge_packages | length > 0

- name: "Packages Baseline / Gather installed package facts ..."
  ansible.builtin.package_facts:
    manager: auto

- name: "Packages Baseline / Installed packages ..."
  set_fact:
    baseline_final_installed_packages: "{{ ansible_facts.packages.keys() }}"

- name: "Packages Baseline / Create marker ..."
  template:
    src: baseline/marker
    dest: "{{ host_policy_dir }}/baseline"
    owner: root
    group: root
    mode: 0400
  vars:
    installed_packages: "{{ baseline_installed_packages }}"
    final_packages: "{{ baseline_final_installed_packages }}"
    purge_packages: "{{ baseline_purge_packages }}"
    pinned_packages: "{{ baseline_pin }}"
    baseline: "{{ baseline_packages }}"
