---
- name: "SYSTEMD / Resolved / Gather installed package facts ..."
  ansible.builtin.package_facts:
    manager: auto


- name: "SYSTEMD / Resolved / install systemd-resolved ..."
  block:
    - name: "SYSTEMD / Resolved / install systemd-resolved ..."
      include_role:
        name: wyga/install-package-override
      vars:
        packages:
          - systemd-resolved
      when: "'systemd-resolved' is not in ansible_facts.packages"
  when: target_distribution not in [ 'ubuntu' ] and target_distribution_version not in [ "22.04" ]

- name: "SYSTEMD / Resolved ..."
  file:
    path: "/etc/systemd/resolved.conf.d"
    state: directory

- name: "SYSTEMD / Resolved ..."
  template:
    src: "resolved/host-policy"
    dest: "/etc/systemd/resolved.conf.d/host-policy.conf"
    group: root
    owner: root
    mode: 0644
  vars:
    systemd_resolved: "{{ systemdConfig.resolved | default({}) }}"
  notify:
    - systemd-resolved

- name: "SYSTEMD / Resolved / Cleanup ..."
  set_fact:
    wyga_resolved_registred_config: "{{ wyga_resolved_registred_config | unique }}"

- name: "SYSTEMD / Resolved / Looking for unmanaged files in /etc/systemd/resolved.conf.d directory ..."
  find:
    paths: "/etc/systemd/resolved.conf.d"
    file_type: file
    excludes: "{{ wyga_resolved_registred_config }}"
  register: resolved_cleanup

- name: "SYSTEMD / Resolved / Purge unmanaged files form /etc/systemd/resolved.conf.d ..."
  file:
    path: "{{ cleanup.path }}"
    state: absent
  loop: "{{ resolved_cleanup.files }}"
  loop_control:
    label: "{{ cleanup.path }}"
    loop_var: cleanup
  notify:
    - systemd-resolved

# systemd-resolved on Debian after installation do not import /etc/resolve.conf's nameservers
- meta: flush_handlers
