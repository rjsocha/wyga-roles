#jinja2: trim_blocks: True, lstrip_blocks: True
pki:
  ca: /etc/site/vpn/{{ name }}/ca.crt
  cert: /etc/site/vpn/{{ name }}/host.crt
  key: /etc/site/vpn/{{ name }}/host.key
  disconnect_invalid: true
{% if vpn.blocklist is defined %}
  blocklist:
{% for block in vpn.blocklist %}
    - {{ block }}
{% endfor %}
{% endif %}

static_host_map:
{% for host in vpn.lighthouse.hosts.keys() %}
  "{{ host }}":
  {% for map in vpn.lighthouse.hosts[host] %}
    - "{{ map }}"
  {% endfor %}
{% endfor %}

static_map:
  cadence: 60s
  network: ip4
  lookup_timeout: 250ms

lighthouse:
  am_lighthouse: {{ 'true' if am_lighthouse else 'false' }}
  {% if am_lighthouse and vpn.lighthouse.dns.enable | default(true) %}
  serve_dns: true
  dns:
    host: {{ ip }}
    port: 53
  {% endif %}
  interval: 60
  hosts:
    {% if not am_lighthouse %}
    {% for host in vpn.lighthouse.hosts.keys() %}
    - {{ host }}
    {% endfor %}
    {% endif %}

listen:
  host: 0.0.0.0
  port: {{ port }}

punchy:
  punch: true
  respond: true
  delay: 1s
  respond_delay: 5s

cipher: {{ vpn.cipher | default('aes') }}
{% if adjacent | length > 0 %}

preferred_ranges:
{% for neig in adjacent %}
  - "{{ neig }}"
{% endfor %}
{% endif %}

relay:
  {% if not am_lighthouse %}
  relays:
  {% for relay in vpn.lighthouse.hosts.keys() %}
    - "{{ relay }}"
  {% endfor %}
  {% endif %}
  am_relay: {{ 'true' if am_lighthouse else 'false' }}
  use_relays: {{ 'true' if use_relays else 'false' }}

tun:
  disabled: false
  dev: {{ vpn.tun.dev | default('overlay0') }}
  drop_local_broadcast: true
  drop_multicast: true
  tx_queue: 500
  mtu: 1300
{% if vpn.routing is defined or vpn_instance.routing is defined %}
  unsafe_routes:
    {% for via in vpn.routing.keys() if not via == ip %}
    {% for route in vpn.routing[via] %}
    - route: {{ route.to }}
      via: {{ via }}
      metric: {{ route.metric | default(1000) }}
      install: true
    {% endfor %}
    {% endfor %}
    {% if vpn_instance.routing is defined %}
    {% for via in vpn_instance.routing.keys() %}
    {% for route in vpn_instance.routing[via] %}
    - route: {{ route.to }}
      via: {{ via }}
      metric: {{ route.metric | default(1000) }}
      install: true
    {% endfor %}
    {% endfor %}
    {% endif %}
{% endif %}
{%if systemroute %}
  use_system_route_table: true
{% endif %}

logging:
  level: fatal
  format: text
  disable_timestamp: true

firewall:
  outbound_action: reject
  inbound_action: reject

  conntrack:
    tcp_timeout: 12m
    udp_timeout: 3m
    default_timeout: 10m

  outbound:
    - port: any
      proto: any
      host: any

  inbound:
    - port: any
      proto: any
      host: any

# Allow unsafe_routes (post 1.9.0)
    - port: any
      proto: any
      host: any
      local_cidr: 0.0.0.0/0
