#jinja2: trim_blocks: True, lstrip_blocks: True
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -m conntrack --ctstate INVALID -j DROP
-A INPUT -p icmp -m icmp --icmp-type 3 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 11 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 12 -j ACCEPT
{% for rule in fw_input_rules %}
-A INPUT
  {{- ' -m ' ~ rule.match if rule.match is defined else '' -}}
  {{- ' -p ' ~ rule.proto if rule.proto is defined else '' -}}
  {{- ' -i ' ~ rule.iface if rule.iface is defined else '' -}}
  {{- ' --dport ' ~ rule.dport if rule.dport is defined else '' -}}
  {{- ' --sport ' ~ rule.sport if rule.sport is defined else '' -}}
  {{- ' -s ' ~ ','.join(rule.src) if rule.src is defined else '' -}}
  {{- ' -d ' ~ ','.join(rule.dst) if rule.dst is defined else '' -}}
  {{ '' }} -j ACCEPT
{% endfor %}
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
{% if host.firewall.dnat is defined or host.firewall.snat is defined %}
*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
{% if host.firewall.dnat is defined %}
{% for rule in host.firewall.dnat %}
{% set dst = rule.from | split(':') | first %}
{% set dport = rule.from | split(':') | last %}
-A PREROUTING
  {{- ' -m ' ~ rule.proto if rule.proto is defined else ' -m tcp' -}}
  {{- ' -p ' ~ rule.proto if rule.proto is defined else ' -p tcp' -}}
  {{- ' -i ' ~ rule.in if rule.in is defined else '' -}}
  {{- ' --dport ' ~ dport -}}
  {{- ' -d ' ~ dst -}}
  {{ '' }} -j DNAT --to {{ rule.to }}
{% endfor %}
{% endif %}
{% if host.firewall.snat is defined %}
{% for rule in host.firewall.snat %}
-A POSTROUTING
  {{- ' -m ' ~ rule.proto if rule.proto is defined else ' -m tcp' -}}
  {{- ' -p ' ~ rule.proto if rule.proto is defined else ' -p tcp' -}}
  {{- ' -i ' ~ rule.in if rule.in is defined else '' -}}
  {{- ' --dport ' ~ rule.dport if rule.dport is defined else '' -}}
  {{- ' --sport ' ~ rule.sport if rule.dport is defined else '' -}}
  {{- ' -d ' ~ rule.dst if rule.dst is defined else '' -}}
  {{- ' -s ' ~ rule.src if rule.src is defined else '' -}}
  {{ '' }} -j SNAT --to {{ rule.to }}
{% endfor %}
{% endif %}
COMMIT
{% endif %}
