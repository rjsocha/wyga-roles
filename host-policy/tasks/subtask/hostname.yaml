---
- block:
    - name: "Set hostname and domain name from policy ..."
      set_fact:
        my_hostname: "{{ host.hostname.split('.') | first | lower}}"
        my_domain:   "{{ host.hostname.split('.')[1:]|join('.') | lower }}"

    - name: "Change hostname from {{ ansible_nodename }} to {{ host.hostname }} ..."
      hostname:
        name: "{{ host.hostname }}"
      changed_when: true
      register: hostname_changed
  when: ansible_nodename != host.hostname

- block:
    - name: "Cleanup /etc/hosts..."
      replace:
        path: "/etc/hosts"
        regexp: '(?i)^(?!(#|127.0.1.1 {{ my_hostname}}.{{ my_domain}} {{ my_hostname}}))(.*\b{{ my_hostname}}\b.*)$'
        replace: '#\2'

    - name: "Update /etc/hosts..."
      lineinfile:
        dest: /etc/hosts
        backup: yes
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: "{{ item.state }}"
        backrefs: "{{ item.backrefs }}"
        insertafter: "{{ item.insertafter }}"
      loop:
        - { backrefs: no,  regexp: '(?i)^127\.0\.0\.1\s+localhost$', line: '127.0.0.1 localhost', insertafter: EOF, state: 'present' }
        - { backrefs: no,  regexp: '(?i)^127\.0\.1\.1', line: '', insertafter: '', state: 'absent' }
        - { backrefs: no,  regexp: '(?i)^127\.0\.1\.1 {{ my_hostname}}.{{ my_domain}} {{ my_hostname}}$', line: '127.0.1.1 {{ my_hostname}}.{{ my_domain}} {{ my_hostname}}', insertafter: '^127\..+localhost$', state: 'present' }

#    - name: "Schedule reboot ..."
#      debug:
#        msg: "Schedule reboot ..."
#      notify: reboot-host
#      changed_when: true
  when: hostname_changed is defined and hostname_changed.changed
