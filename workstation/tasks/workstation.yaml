- name: "Workstation / GDM Configuration ..."
  template:
    src: gdm/daemon.conf
    dest: /etc/gdm3/daemon.conf
    group: root
    owner: root
    mode: 0644

- name: "Workstation / GDM Configuration ..."
  template:
    src: gdm/policy
    dest: /usr/share/gdm/dconf/99-host-policy
    group: root
    owner: root
    mode: 0644

- name: "Workstation / GNOME Settings ..."
  block:
    - name: "Workstation / GNOME Settings ..."
      remote_user: "{{ host.setup.workstation.user }}"
      command:
        cmd: dconf load /
        stdin: "{{ lookup('ansible.builtin.template', 'dconf/config') }}"
        creates: ~/.config/.configured

    - name: "Workstation / GNOME Settings / Marker ..."
      remote_user: "{{ host.setup.workstation.user }}"
      copy:
        content: "#CONFIGURED"
        dest: ~/.config/.configured
        force: false
      register: first_setup

    - name: "Workstation / GNOME Avatar ..."
      copy:
        src: "account/avatar.png"
        dest: "/var/lib/AccountsService/icons/{{ host.setup.workstation.user }}"
        mode: 0644
        force: "{{ true if first_setup.changed else false }}"

    - name: "Workstation / GNOME User Configuration ..."
      template:
        src: "account/user"
        dest: "/var/lib/AccountsService/users/{{ host.setup.workstation.user }}"
        group: root
        owner: root
        mode: 0400
        force: "{{ true if first_setup.changed else false }}"
      vars:
        username: "{{ host.setup.workstation.user }}"

    - name: "Workstation / GNOME Autostart / Directory ..."
      remote_user: "{{ host.setup.workstation.user }}"
      file:
        path: ~/.config/autostart
        state: directory

    - name: "Workstation / Applications configuration ..."
      set_fact:
        workstation_app:
          - "flameshot/flameshot.ini"

    - name: "Workstation / Applications configuration / Directory ..."
      remote_user: "{{ host.setup.workstation.user }}"
      file:
        path: "~/.config/{{ app | dirname }}"
        state: directory
      loop: "{{ workstation_app }}"
      loop_control:
        loop_var: app
        label: "~/.config/{{ app | dirname }}"

    - name: "Workstation / Applications configuration / Files ..."
      remote_user: "{{ host.setup.workstation.user }}"
      copy:
        src: "app/{{ app }}"
        dest: "~/.config/{{ app }}"
        force: "{{ true if first_setup.changed else false }}"
      loop: "{{ workstation_app }}"
      loop_control:
        loop_var: app
        label: "~/.config/{{ app }}"

    - name: "Workstation / GNOME Autostart / Enable ..."
      remote_user: "{{ host.setup.workstation.user }}"
      file:
        src: "{{ autostart }}"
        path: "~/.config/autostart/{{ autostart | basename }}"
        force: "{{ true if first_setup.changed else false }}"
        state: link
      loop:
        - "/usr/share/applications/org.flameshot.Flameshot.desktop"
      loop_control:
        loop_var: autostart
        label: "{{ autostart | basename }}"

    - name: "Workstation / XDG ..."
      block:
        - name: "Workstation / XDG / Directories ..."
          set_fact:
            xdg_relocate:
              - Desktop
              - Templates
              - Public
              - Music
              - Pictures
              - Videos
            xdg_create:
              - Documents
              - Downloads

        - name: "Workstation / XDG / Directories / Relocate ..."
          remote_user: "{{ host.setup.workstation.user }}"
          file:
            path: "~/.xdg/{{ directory }}"
            state: directory
          loop: "{{ xdg_relocate }}"
          loop_control:
            loop_var: directory
            label: "~/.xdg/{{ directory }}"

        - name: "Workstation / XDG / Directories / Create ..."
          remote_user: "{{ host.setup.workstation.user }}"
          file:
            path: "~/{{ directory }}"
            state: directory
          loop: "{{ xdg_create }}"
          loop_control:
            loop_var: directory
            label: "~/{{ directory }}"

        - name: "Workstation / XDG / Bookmarks ..."
          remote_user: "{{ host.setup.workstation.user }}"
          file:
            path: ~/.config/gtk-3.0
            state: directory

        - name: "Workstation / XDG / Bookmarks / Setup ..."
          remote_user: "{{ host.setup.workstation.user }}"
          template:
            src: xdg/bookmarks
            dest: ~/.config/gtk-3.0/bookmarks

        - name: "Workstation / XDG / Configuration ..."
          remote_user: "{{ host.setup.workstation.user }}"
          template:
            src: xdg/user-dirs.dirs
            dest: ~/.config/user-dirs.dirs

        - name: "Workstation / XDG / Directories / Cleanup ..."
          remote_user: "{{ host.setup.workstation.user }}"
          file:
            path: "~/{{ directory }}"
            state: absent
          loop: "{{ xdg_relocate }}"
          loop_control:
            loop_var: directory
            label: "~/{{ directory }}"
      when: first_setup.changed

    - name: "Workstation / Cleanup ..."
      remote_user: "{{ host.setup.workstation.user }}"
      file:
        path: "~/{{ remove }}"
        state: absent
      loop:
        - .face
        - .face.icon
      loop_control:
        loop_var: remove
        label: "~/{{ remove }}"
  when: host.setup.workstation.user is defined

- name: "Workstation / Install ..."
  block:
    - name: "Workstation / Install / Ansible ..."
      include_role:
        name: wyga/install/ansible
      when: host.setup.workstation.install | intersect([ 'ansible' ]) | length > 0

    - name: "Workstation / Install / Slack ..."
      include_role:
        name: wyga/install/slack-desktop
      when: host.setup.workstation.install | intersect([ 'slack', 'slack-desktop' ]) | length > 0
  when: host.setup.workstation.install is defined
